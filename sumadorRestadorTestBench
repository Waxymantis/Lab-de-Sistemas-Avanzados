--------------------------------------------------------------------------------
-- Company: 
-- Engineer:
--
-- Create Date:   00:43:06 10/03/2019
-- Design Name:   
-- Module Name:   /home/ise/Desktop/Tareas Sistemas Avanzados/SumadorRestador8bits/sumadorRestadorTestBench.vhd
-- Project Name:  SumadorRestador8bits
-- Target Device:  
-- Tool versions:  
-- Description:   
-- 
-- VHDL Test Bench Created by ISE for module: sumadorRestador
-- 
-- Dependencies:
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
--
-- Notes: 
-- This testbench has been automatically generated using types bit and
-- bit_vector for the ports of the unit under test.  Xilinx recommends
-- that these types always be used for the top-level I/O of a design in order
-- to guarantee that the testbench will bind correctly to the post-implementation 
-- simulation model.
--------------------------------------------------------------------------------

 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY sumadorRestadorTestBench IS
END sumadorRestadorTestBench;
 
ARCHITECTURE behavior OF sumadorRestadorTestBench IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT sumadorRestador
    PORT(
         A : IN  bit_vector(7 downto 0);
         B : IN  bit_vector(7 downto 0);
			Opcion: in bit;
         S : OUT  bit_vector(7 downto 0);
			Overflow: out bit;
			CoutExt: out bit
        );
    END COMPONENT;
    

   --Inputs
   signal A : bit_vector(7 downto 0) := (others => '0');
   signal B : bit_vector(7 downto 0) := (others => '0');
	signal Opcion : bit :='0';

 	--Outputs
   signal S : bit_vector(7 downto 0);
	signal Overflow: bit;
	signal CoutExt: bit;
   --signal Cout : bit;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
 
   
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: sumadorRestador PORT MAP (
          A => A,
          B => B,
          Opcion => Opcion,
          S => S,
			 Overflow => Overflow,
			 CoutExt => CoutExt
        );

   
 

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	
		A<="10011001";
		B<="11100100";
		Opcion<='0';
		wait for 100 ns;	
		A<="10011001";
		B<="11100100";
		Opcion<='1';

      
   end process;

END;
